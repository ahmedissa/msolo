0.6.4 - fixed the remaining race condition when multiple new processes vy for
cloned file descriptors. only one process at a time can go through the startup 
procedure due to a rather course file lock. this limits you to about one
restart in n seconds, where n is directly dependent on how long it takes the
underlying server to perform its startup.

reduced check_interval to make the parent more responsive to dead children.
finally implemented the separate rss check interval so we don't spend all
our time finding out how much memory we are using.

0.6.3 - fixed another thread start race condition.
added a graceful shutdown hook for the parent, mostly to clean up turd
files for the micromanagement socket.

0.6.2 - fix the initialization process a bit. server_bind() only aquires
resources. server_activate() spawns threads.  to precisely control
daemonization, you need to have some guarantees about when threads start.
fixed connection vs request counting that was causing wacky profiling.

0.6.1 - continued refactoring.
cleaned up the threaded use cases and inserted minimal locking.
reordered the socket binding code allow for proper ownership of sockets when
dropping privileges.
removed some junk logging that required more complex initialization of logging
module. probably should revisit that when refactoring wiseguyd.
added defensive timeouts to the unix domain socket code.
added a bit more debug logging since the application initialization is now
quite complex, more hints are needed to properly understand the order of 
operations.
fixed graceful shutdown give the application every possible chance to exit
cleanly before issuing a SIGKILL after 30 seconds.

0.6 - extensive refactoring to support http and fcgi protocols.
added support for file descriptor passing and high availability.
refactored the embedded management server to use threads instead of the
nasty alarm-based loop.
added handlers for init_child/exit_child to better hook in fork-sensitive code.
added a small per-instance unix socket server that allows for reliable control
over the master process.

0.5.10 - make sure the management server code doesn't orphan the pre-spawned
child processes.

0.5.9 - refactored for greater flexibility.

0.5.8 - added a fix for python 2.6 changes to the embedded http server

0.5.7 - added init/exit handlers to allow more code control within the child
process.

0.5.6 - add a warm-up request count for profiling so you can more easily 
sample a "hot" server. fixed the macro memory profiler.

0.5.5 - added support for alternate profilers and remote fetching of profile
data.

0.5.4 - added support for unix domain sockets. misc cleanup.

0.5.3 - requires py-fastcgi-1.3, adds support for a timeout between the
accept() and the first read() on the input socket. this should fix an issue
with half-opened connections stacking up and causing the server to hang.

0.5.1 - validate the memory usage keys in linux_get_memory_usage to prevent
crash bug in the 'boss' process

0.5 - removed all of the stats code. this is better handled as another separate
module. see spyglass.

0.4.1 - added linux-specific memory supervisor and added more error handling
in the manager.

0.4 - a good, stable release
